{"name":"Miner","tagline":"Miner is generic engine and framework for processing and analyzing medium and small size data written in python","body":"Framework\r\n=========\r\n\r\nMiner introduces simple yet powerful query language for data processing (you will see some examples below).\r\nIt also provides convenient (for some) console interface with context based autocompletion.\r\nMiner is written in python, allowing easy integration with proprietary data formats and extending its functionality.\r\n\r\nApplications\r\n------------\r\nMiner can  be used for wide variety of tasks like analyzing logs of web servers, financial data,\r\npost processing results of database queries and even analyzing network captures.\r\nIt can be also used to perform simulations and tests.\r\n\r\nQuery Examples\r\n--------------\r\nConsider you have log from http server in csv format with something like following:\r\n```\r\npath,time\r\n/index.html,10\r\n/login,1000\r\n/heavy_script?param=1,10000\r\n```\r\nWith miner you can easily find user requests that took maximum time:\r\n```\r\nREAD log.csv | TOP 5 time | STDOUT\r\n```\r\nThe output will be something like:\r\n```\r\npath                   time\r\n----------------------------\r\n/heavy_script?param=5  50000\r\n/heavy_script?param=4  40000\r\n/heavy_script?param=3  30000\r\n/heavy_script?param=2  20000\r\n/heavy_script?param=1  10000\r\n```\r\n\r\nYou can see the total time consumed by different resources\r\n```\r\nREAD log.csv | SELECT path.split('?',1)[0] as resource, time | FOR DISTINCT resource SELECT count(True) as numRequests, sum(time) | STDOUT\r\nresource       numRequests     time\r\n------------------------------------\r\n/heavy_script  10              100000\r\n/index.html    5               50\r\n/login         5               5000\r\n```\r\nAnd many many others interesting facts that you can learn without writing single line of code.\r\n\r\nMiner provides the possibility to work with data without need to insert it to database or pre-process it in another way.\r\n\r\nMiner Tools\r\n-----------\r\nMiner tools are python packages which extends miner by implementing connectors to new data formats and/or\r\nexporting other functionality.\r\nFollowing tools are available:\r\n* http - parse urls and http headers\r\n* httpd_logs - reads ncsa (common log format) and customized apache logs\r\n* excel_SX - Allows to generate excel reports (but has many dependencies)\r\n* pcap - enables miner to read/write network captures\r\n\r\nWindows Binaries\r\n----------------\r\nMiner distribution includes python implementation of following linux utilities:\r\n* curl\r\n* gzip, gunzip, zcat\r\n* md5sum\r\n* tar\r\n* cat\r\n* grep\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}